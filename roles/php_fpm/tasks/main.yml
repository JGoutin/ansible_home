---

- name: Ensure Remi repository is installed
  ansible.builtin.dnf:
    state: present
    name: "https://rpms.remirepo.net/fedora/remi-release-{{ ansible_distribution_major_version }}.rpm"
    install_weak_deps: false
    disable_gpg_check: true
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when: (php_remi_repository | bool) or (php_hardening | bool)

- name: List PHP versions available on Remi repository
  ansible.builtin.command: "dnf module list php:remi-{{ php_version }}"
  changed_when: false
  register: _php_module_list
  when: (php_remi_repository | bool) or (php_hardening | bool)

- name: Get the latest matching PHP version matching the specification
  ansible.builtin.set_fact:
    _php_module: "{{ _php_module_list.stdout | ansible.builtin.regex_findall('remi-[0-9]+\\.[0-9]+', multiline=True) | max }}"
  when: (php_remi_repository | bool) or (php_hardening | bool)

- name: 'Ensure PHP is configured to modular repository "{{ _php_module }}"'
  ansible.builtin.command: "dnf module switch-to php:{{ _php_module }} -y"
  changed_when: false
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when: (php_remi_repository | bool) or (php_hardening | bool)

- name: Ensure PHP and its modules are installed
  ansible.builtin.dnf:
    state: present
    name: "{{ ['php', 'php-common', 'php-fpm', 'php-opcache',
           ((php_hardening | bool) | ternary(['php-snuffleupagus'], [])),
           ['php'] | product(php_modules) | map('join', '-') | list] | flatten | unique }}"
    install_weak_deps: false
  retries: 10
  delay: 1
  register: _
  until: _ is successful

- name: Netdata configuration
  ansible.builtin.include_tasks: netdata.yml
  when: common_netdata_enable | bool

- name: Ensure PHP site configuration is present
  ansible.builtin.template:
    src: site.ini.j2
    dest: "/etc/php.d/99-{{ php_fpm_site }}.ini"

- name: Ensure PHP security hardening configuration is present
  ansible.builtin.template:
    src: hardening.ini.j2
    dest: /etc/php.d/90-hardening.ini

- name: Check if PHP-FPM configuration was updated by RPM
  ansible.builtin.stat:
    path: /etc/php-fpm.conf.rpmnew
  register: php_fpm_conf_rpmnew

- name: Ensure latest PHP-FPM configuration from RPM is used
  ansible.builtin.copy:
    remote_src: true
    src: /etc/php-fpm.conf.rpmnew
    dest: /etc/php-fpm.conf
  when: php_fpm_conf_rpmnew.stat.exists

- name: Ensure PHP-FPM logs go to the journal
  ansible.builtin.lineinfile:
    path: /etc/php-fpm.conf
    regexp: '^;?\s*{{ item.option }}\s*='
    line: '{{ item.option }} = {{ item.value }}'
  with_items:
    - option: error_log
      value: syslog
    - option: log_level
      value: "{{ php_fpm_log_level }}"

- name: Ensure PHP-FPM site configuration is present
  ansible.builtin.template:
    src: php-fpm.conf.j2
    dest: "/etc/php-fpm.d/{{ php_fpm_site }}.conf"

- name: Ensure PHP-FPM default site is absent
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/php-fpm.d/www.conf
    - /etc/nginx/conf.d/php-fpm.conf
    - /etc/nginx/default.d/php.conf
    - /etc/httpd/conf.d/php.conf

- name: Ensure PHP-FPM service parent directory is present
  ansible.builtin.file:
    path: /etc/systemd/system/php-fpm.service.d
    state: directory

- name: Ensure PHP-FPM service configuration is present
  ansible.builtin.template:
    src: php-fpm_service.conf.j2
    dest: /etc/systemd/system/php-fpm.service.d/php-fpm.conf

- name: Ensure Fail2ban directory is present
  ansible.builtin.file:
    path: /etc/fail2ban/jail.d/
    state: directory

- name: Ensure Fail2ban is configured
  ansible.builtin.copy:
    src: php.local
    dest: /etc/fail2ban/jail.d/php.local

- name: Ensure PHP-FPM service is enabled at boot
  ansible.builtin.systemd:
    name: php-fpm
    enabled: true

- name: Ensure PHP-FPM "rpmnew" and "rpmsave" files are absent
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/php-fpm.conf.rpmnew
    - /etc/php-fpm.conf.rpmsave
