---

- name: Ensure Postfix is installed
  ansible.builtin.dnf:
    state: present
    name: postfix
    install_weak_deps: false
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when: not (_ostree | bool)

- name: Ensure Postfix is installed
  community.general.rpm_ostree_pkg:
    state: present
    name: postfix
  when: _ostree | bool

- name: Ensure Postfix SASL support is installed
  ansible.builtin.dnf:
    state: present
    name: cyrus-sasl-plain
    install_weak_deps: false
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when:
    - common_mail_smtp_user is defined
    - not (_ostree | bool)

- name: Ensure Postfix SASL support is installed
  community.general.rpm_ostree_pkg:
    state: present
    name: cyrus-sasl-plain
  when:
    - common_mail_smtp_user is defined
    - _ostree | bool

- name: Ensure Postfix SASL password file exists
  ansible.builtin.template:
    src: sasl_passwd.j2
    dest: /etc/postfix/sasl_passwd
    owner: root
    group: root
    mode: '0600'
  when: common_mail_smtp_user is defined

- name: Check if Postfix configuration was updated by RPM
  ansible.builtin.stat:
    path: /etc/postfix/main.cf.rpmnew
  register: postfix_main_cf_rpmnew

- name: Ensure latest Postfix configuration from RPM is used
  ansible.builtin.copy:
    remote_src: true
    src: /etc/postfix/main.cf.rpmnew
    dest: /etc/postfix/main.cf
  when: postfix_main_cf_rpmnew.stat.exists

- name: Ensure Postfix SMTP relay is configured
  ansible.builtin.lineinfile:
    path: /etc/postfix/main.cf
    regexp: "^#?{{ item.line.split('=')[0] }}="
    line: "{{ item.line }}"
    firstmatch: "{{ item.firstmatch | default(false) }}"
  with_items:
    - line: "relayhost = {{ _smtp_server }}"
    - line: "inet_interfaces = {{ common_mail_smtp_inet_interfaces }}"
    - line: "smtp_sasl_auth_enable = yes"
      when: "{{ common_mail_smtp_user is defined }}"
    - line: "smtp_sasl_security_options = noanonymous, noplaintext"
      when: "{{ common_mail_smtp_user is defined }}"
    - line: "smtp_sasl_tls_security_options = noanonymous"
      when: "{{ common_mail_smtp_user is defined }}"
    - line: "smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd"
      when: "{{ common_mail_smtp_user is defined }}"
    - line: "smtp_use_tls = {{ (common_mail_smtp_tls in ('TLS', 'STARTTLS')) |
             ternary('yes', 'no') }}"
    - line: "smtp_tls_wrappermode = {{ (common_mail_smtp_tls == 'TLS') |
             ternary('yes', 'no') }}"
    - line: "smtp_tls_security_level = {{ (common_mail_smtp_user is defined) |
             ternary('encrypt', 'may') }}"
  when: item.when | default(true)

- name: Ensure postfix service is started and enabled at boot
  ansible.builtin.systemd:
    name: postfix
    state: started
    enabled: true

- name: Check if Postfix aliases configuration was updated by RPM
  ansible.builtin.stat:
    path: /etc/aliases.rpmnew
  register: postfix_aliases_rpmnew

- name: Ensure latest Postfix aliases configuration from RPM is used
  ansible.builtin.copy:
    remote_src: true
    src: /etc/aliases.rpmnew
    dest: /etc/aliases
  when: postfix_aliases_rpmnew.stat.exists

- name: Ensure root mails redirection is configured
  ansible.builtin.lineinfile:
    path: /etc/aliases
    regexp: "^#?root:"
    line: "root:           {{ common_mail_smtp_send_to }}"
  register: _postfix_aliases
  when: common_mail_smtp_send_to is defined

- name: Ensure Postfix SASL passwords are reloaded
  ansible.builtin.command: postmap /etc/postfix/sasl_passwd
  changed_when: false
  when: _postfix_aliases.changed  # noqa no-handler

- name: Ensure Postfix SASL passwords are secured
  ansible.builtin.file:
    path: /etc/postfix/sasl_passwd.db
    owner: root
    group: root
    mode: '0600'
  register: _postfix_sasl
  when: common_mail_smtp_user is defined

- name: Ensure Postfix aliases are reloaded
  ansible.builtin.command: newaliases
  changed_when: false
  when: _postfix_aliases.changed  # noqa no-handler

- name: Ensure Postfix service parent directory is present
  ansible.builtin.file:
    path: /etc/systemd/system/postfix.service.d
    state: directory

- name: Ensure Postfix systemd service configuration is present
  ansible.builtin.copy:
    src: postfix_service.conf
    dest: /etc/systemd/system/postfix.service.d/postfix.conf
  register: _postfix_systemd

- name: Ensure postfix service is restarted
  ansible.builtin.systemd:
    name: postfix
    state: restarted
    enabled: true
    daemon_reload: "{{ _postfix_systemd.changed | bool }}"
  when: _postfix_aliases.changed or _postfix_sasl.changed or _postfix_systemd.changed  # noqa no-handler

- name: Ensure Postfix "rpmnew" files are absent
  ansible.builtin.file:
    path: "{{ item }}.rpmnew"
    state: absent
  with_items:
    - /etc/postfix/main.cf
    - /etc/aliases

- name: Ensure Postfix "rpmsave" files are absent
  ansible.builtin.file:
    path: "{{ item }}.rpmsave"
    state: absent
  with_items:
    - /etc/postfix/main.cf
    - /etc/aliases
