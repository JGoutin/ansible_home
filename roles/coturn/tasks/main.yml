---

- name: Ensure CoTURN is installed from Fedora repository
  ansible.builtin.dnf:
    state: present
    name: coturn
    install_weak_deps: false
  retries: 10
  delay: 1
  register: _
  until: _ is successful

- name: Check if CoTURN configuration was updated by RPM
  ansible.builtin.stat:
    path: /etc/coturn/turnserver.conf.rpmnew
  register: coturn_turnserver_rpmnew

- name: Ensure latest CoTURN configuration from RPM is used
  ansible.builtin.copy:
    remote_src: true
    src: /etc/coturn/turnserver.conf.rpmnew
    dest: /etc/coturn/turnserver.conf
  when: coturn_turnserver_rpmnew.stat.exists

- name: Ensure CoTURN is configured
  ansible.builtin.lineinfile:
    path: /etc/coturn/turnserver.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line | default(omit) }}"
    owner: root
    group: coturn
    mode: "0640"
  no_log: "{{ item.no_log | default(false) }}"
  with_items:
    - regexp: '^#?\s*listening-port='
      line: "listening-port={{ coturn_listening_port }}"
    - regexp: '^#?\s*tls-listening-port='
      line: "tls-listening-port={{ coturn_tls_listening_port }}"
    - regexp: '^#?\s*fingerprint'
      line: "fingerprint"
    - regexp: '^#?\s*use-auth-secret'
      line: "use-auth-secret"
    - regexp: '^#?\s*static-auth-secret='
      line: "static-auth-secret={{ coturn_static_auth_secret }}"
      no_log: true
    - regexp: '^#?\s*realm='
      line: "realm={{ coturn_realm }}"
    - regexp: '^#?\s*total-quota='
      line: "total-quota={{ coturn_total_quota }}"
    - regexp: '^#?\s*bps-capacity='
      line: "bps-capacity={{ coturn_bps_capacity }}"
    - regexp: '^#?\s*no-multicast-peers'
      line: "no-multicast-peers"
    - regexp: '^#?\s*no-software-attribute'
      line: "no-software-attribute"
    - regexp: '^#?\s*stale-nonce'
      line: "stale-nonce"
    - regexp: '^#?\s*no-cli'
      line: "no-cli"
    - regexp: '^#?\s*no-tlsv1\s*$'
      line: "no-tlsv1"
    - regexp: '^#?\s*no-tlsv1_1'
      line: "no-tlsv1_1"
    - regexp: '^#?\s*no-tlsv1_2'
      line: "no-tlsv1_2"
    - regexp: '^#?\s*dh-file='
      line: "#dh-file=<DH-PEM-file-name>"  # Revert from TLS1.2 configuration
    - regexp: '^#?\s*cipher-list='
      line: '#cipher-list="DEFAULT"'  # Revert from TLS1.2 configuration
    - regexp: '^#?\s*pkey='
      line: "pkey={{ _tls_key }}"
    - regexp: '^#?\s*cert='
      line: "cert={{ _tls_crt }}"
    - regexp: '^#?\s*log-file='
      line: "log-file=syslog"
    - regexp: '^#?\s*syslog'
      line: "syslog"
    - regexp: '^#?\s*no-stdout-log'
      line: "no-stdout-log"
    - regexp: '^#?\s*simple-log'
      line: "#simple-log"
    - regexp: '^#?\s*no-rfc5780'
      line: "no-rfc5780"  # Mitigate STUN amplification attack
    - regexp: '^#?\s*no-stun-backward-compatibility'
      line: "no-stun-backward-compatibility"  # Mitigate STUN amplification attack
    - regexp: '^#?\s*response-origin-only-with-rfc5780'
      line: "response-origin-only-with-rfc5780"  # Mitigate STUN amplification attack

- name: TLS certificate configuration
  ansible.builtin.include_tasks: tls_certificates.yml

- name: Ensure CoTURN service parent directory is present
  ansible.builtin.file:
    path: /etc/systemd/system/coturn.service.d
    state: directory

- name: Ensure CoTURN systemd service configuration is present
  ansible.builtin.copy:
    src: coturn_service.conf
    dest: /etc/systemd/system/coturn.service.d/coturn.conf

- name: Ensure CoTURN service is started and enabled at boot
  block:
    - name: Ensure CoTURN service is started and enabled at boot
      ansible.builtin.systemd:
        name: coturn
        state: started
        enabled: true
        daemon_reload: true
  rescue:
    - name: Show service status on error
      ansible.builtin.command: journalctl -u coturn --no-pager  # noqa command-instead-of-module
      failed_when: true
      changed_when: false

- name: Firewall configuration
  ansible.builtin.include_tasks: firewall.yml

- name: Ensure CoTURN "rpmnew" and "rpmsave" files are absent
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/coturn/turnserver.conf.rpmnew
    - /etc/coturn/turnserver.conf.rpmsave
