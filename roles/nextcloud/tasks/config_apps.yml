---

- name: List Nextcloud applications that are already installed
  ansible.builtin.command: "/usr/bin/php occ -n app:list"
  args:
    chdir: /var/www/nextcloud/
  become: true
  become_user: nextcloud
  changed_when: false
  register: _nextcloud_apps

- name: Ensure Nextcloud applications are installed
  ansible.builtin.command: "/usr/bin/php occ -n app:install {{ item }}"
  args:
    chdir: /var/www/nextcloud/
    creates: "/var/www/nextcloud/apps/{{ item }}/appinfo/info.xml"
  become: true
  become_user: nextcloud
  ignore_errors: true  # noqa ignore-errors
  with_items: "{{ nextcloud_applications }}"

- name: Ensure Nextcloud applications are enabled
  ansible.builtin.command: "/usr/bin/php occ -n app:enable {{ item }}"
  args:
    chdir: /var/www/nextcloud/
  become: true
  become_user: nextcloud
  ignore_errors: true  # noqa ignore-errors
  changed_when: false
  with_items: "{{ nextcloud_applications }}"

- name: Ensure Nextcloud encryption is enabled
  ansible.builtin.command: /usr/bin/php occ -n encryption:enable
  args:
    chdir: /var/www/nextcloud/
  become: true
  become_user: nextcloud
  changed_when: false
  when: '"encryption" in nextcloud_applications'

- name: Ensure the TURN/STUN server is configured in the Spreed application
  ansible.builtin.command: "/usr/bin/php occ -n config:app:set spreed {{ item.value }}"
  args:
    chdir: /var/www/nextcloud/
  become: true
  become_user: nextcloud
  changed_when: false
  no_log: "{{ item.no_log | default(false) }}"
  with_items:
    - value: stun_servers --value='["{{ nextcloud_domain }}:5349"]'
    - value: turn_servers --value='[{"schemes":"turns","server":"{{ nextcloud_domain }}:5349","secret":"{{ nextcloud_coturn_secret }}","protocols":"udp,tcp"}]'
      no_log: true
  when: '"spreed" in nextcloud_applications'

- name: Ensure "twofactor_totp" is migrated to "twofactor_webauthn" application
  ansible.builtin.command: "/usr/bin/php occ -n {{ item }}"
  args:
    chdir: /var/www/nextcloud/
  become: true
  become_user: nextcloud
  changed_when: false
  ignore_errors: true  # noqa ignore-errors
  with_items:
    - "twofactor_webauthn:migrate-u2f --all"
    - "twofactorauth:cleanup u2f"
    - "app:remove twofactor_u2f"
  when:
    - '"twofactor_webauthn" in nextcloud_applications'
    - '"twofactor_u2f" in _nextcloud_apps.stdout'

- name: Ensure user specified Nextcloud application configuration is set
  ansible.builtin.command: '/usr/bin/php occ -n config:app:set {{ item.name }}
            --value="{{ item.value }}"
            --type={{ item.type | default("string") }}'
  args:
    chdir: /var/www/nextcloud/
  become: true
  become_user: nextcloud
  ignore_errors: true  # noqa ignore-errors
  changed_when: false
  with_items: "{{ nextcloud_applications_config }}"
