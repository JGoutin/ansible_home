---

- name: Ensure RpmFusion-free repository is installed
  ansible.builtin.include_role:
    name: jgoutin.home.rpmfusion
  vars:
    rpmfusion_free: true
    rpmfusion_nonfree: true  # Required for "libva-intel-driver"

- name: Ensure Kodi user is present
  ansible.builtin.user:
    name: kodi

- name: Ensure incomplete multimedia hardware acceleration drivers are removed
  ansible.builtin.dnf:
    state: absent
    name:
      - mesa-va-drivers
      - mesa-vdpau-drivers
      - libva-intel-driver

- name: Ensure full multimedia hardware acceleration drivers are installed
  ansible.builtin.dnf:
    state: present
    name:
      - intel-media-driver
      - mesa-dri-drivers
      - mesa-va-drivers-freeworld
      - mesa-vdpau-drivers-freeworld
  retries: 10
  delay: 1
  register: _
  until: _ is successful

- name: Ensure Kodi and its dependencies are installed
  ansible.builtin.dnf:
    state: present
    name:
      - plymouth-system-theme
      - polkit
      - kodi
      - kodi-eventclients
      - kodi-inputstream-adaptive
      - kodi-inputstream-rtmp
      - kodi-platform
      - kodi-visualization-spectrum
  retries: 10
  delay: 1
  register: _
  until: _ is successful

- name: Ensure Kodi PVR plugins are installed
  ansible.builtin.dnf:
    state: present
    name: "{{ ['kodi-pvr'] | product(kodi_plugins_pvr | default([])) | map('join', '-') | list }}"
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when: kodi_plugins_pvr is defined

- name: Ensure Kodi Libretro is installed
  ansible.builtin.dnf:
    state: "{{ kodi_libretro | bool | ternary('present', 'absent') }}"
    name:
      - kodi-game-libretro
      - kodi-game-libretro-buildbot-addons-repository
  retries: 10
  delay: 1
  register: _
  until: _ is successful

- name: Ensure LIRC is installed
  ansible.builtin.dnf:
    state: present
    name: lirc
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when: kodi_ir_remote | bool

- name: Ensure LIRC service is started and enabled at boot
  ansible.builtin.systemd:
    name: lircd
    state: started
    enabled: true
  when: kodi_ir_remote | bool

- name: Ensure Kodi userdata directory is present
  ansible.builtin.file:
    path: /home/kodi/.kodi/userdata
    state: directory
    owner: kodi
    group: kodi

- name: Ensure Kodi advanced settings configuration file exists
  ansible.builtin.copy:
    dest: /home/kodi/.kodi/userdata/advancedsettings.xml
    content: "<advancedsettings></advancedsettings>"
    owner: kodi
    group: kodi
    force: false

- name: Ensure Kodi keyboard configuration file exists
  ansible.builtin.copy:
    dest: /home/kodi/.kodi/userdata/keymaps/keyboard.xml
    content: "<keymap></keymap>"
    owner: kodi
    group: kodi
    force: false

- name: Ensure Ansible "python3-lxml" requirement is installed
  ansible.builtin.dnf:
    state: present
    name: python3-lxml
    install_weak_deps: false
  retries: 10
  delay: 1
  register: kd_python3_lxml
  until: kd_python3_lxml is successful

- name: Ensure Kodi is configured
  block:
    - name: Ensure Kodi exit button is disabled
      community.general.xml:
        path: /home/kodi/.kodi/userdata/advancedsettings.xml
        xpath: /advancedsettings/showexitbutton
        value: "false"

    - name: Ensure Kodi exit on power button
      community.general.xml:
        path: /home/kodi/.kodi/userdata/keymaps/keyboard.xml
        xpath: /keymap/global/keyboard/power
        value: shutdown
        state: "{{ (kodi_power_button_confirm | bool) | ternary('absent', 'present') }}"

  always:
    - name: Ensure Ansible "python3-lxml" requirement is removed
      ansible.builtin.dnf:
        state: absent
        name: python3-lxml
      when: kd_python3_lxml.changed  # noqa no-handler

- name: Ensure Unzip is installed
  # Required by "unarchive" following step
  ansible.builtin.dnf:
    state: present
    name: unzip
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when: kodi_restore_profile is defined

- name: Ensure Kodi profile is restored
  ansible.builtin.unarchive:
    src: "{{ kodi_restore_profile }}"
    dest: /home/kodi/.kodi
    owner: kodi
    group: kodi
    creates: /home/kodi/.kodi/userdata/profiles.xml
  when: kodi_restore_profile is defined

- name: Firewall configuration
  ansible.builtin.include_tasks: firewall.yml

- name: Service autostart configuration
  ansible.builtin.include_tasks: autostart.yml
