---

- name: Ensure RpmFusion-free repository is installed
  ansible.builtin.include_role:
    name: jgoutin.home.rpmfusion
  vars:
    rpmfusion_free: true

- name: Ensure Kodi user is present
  ansible.builtin.user:
    name: kodi

- name: Ensure Kodi and its dependencies are installed
  ansible.builtin.dnf:
    state: present
    name:
      - mesa-dri-drivers
      - mesa-vdpau-drivers
      - plymouth-system-theme
      - polkit
      - kodi
      - kodi-eventclients
      - kodi-inputstream-adaptive
  retries: 10
  delay: 1
  register: _
  until: _ is successful

- name: Ensure LIRC is installed
  ansible.builtin.dnf:
    state: present
    name: lirc
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when: kodi_ir_remote | bool

- name: Ensure LIRC service is started and enabled at boot
  ansible.builtin.systemd:
    name: lircd
    state: started
    enabled: true
  when: kodi_ir_remote | bool

- name: Ensure Kodi userdata directory is present
  ansible.builtin.file:
    path: /home/kodi/.kodi/userdata
    state: directory
    owner: kodi
    group: kodi

- name: Ensure Kodi exit button is disabled
  ansible.builtin.copy:
    src: advancedsettings.xml
    dest: /home/kodi/.kodi/userdata/advancedsettings.xml
    owner: kodi
    group: kodi

- name: Ensure Unzip is installed
  # Required by "unarchive" following step
  ansible.builtin.dnf:
    state: present
    name: unzip
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when: kodi_restore_profile is defined

- name: Ensure Kodi profile is restored
  ansible.builtin.unarchive:
    src: "{{ kodi_restore_profile }}"
    dest: /home/kodi/.kodi
    owner: kodi
    group: kodi
    creates: /home/kodi/.kodi/userdata/profiles.xml
  when: kodi_restore_profile is defined

- name: Firewall configuration
  ansible.builtin.include_tasks: firewall.yml

- name: Service autostart configuration
  ansible.builtin.include_tasks: autostart.yml
