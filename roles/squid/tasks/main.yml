---

- name: Ensure Squid is installed
  ansible.builtin.dnf:
    state: present
    name: squid
  retries: 10
  delay: 1
  register: _
  until: _ is successful

- name: Netdata configuration
  ansible.builtin.include_tasks: netdata.yml
  when: common_netdata_enable | bool

- name: Ensure Squid configuration is present
  ansible.builtin.template:
    src: squid.conf.j2
    dest: /etc/squid/squid.conf
  register: _squid_conf

- name: Ensure the specified Squid CA certificate is present
  ansible.builtin.copy:
    src: "{{ squid_ssl_bump_ca }}"
    dest: "{{ _tls_ca }}"
    owner: root
    group: squid
    mode: "0640"
  register: _squid_ca_copy
  when: squid_ssl_bump_ca is defined

- name: Ensure a generated Squid CA certificate is present
  ansible.builtin.command: "openssl req -new -x509 -days 3650 -nodes -extensions v3_ca
            -newkey ec -pkeyopt ec_paramgen_curve:prime256v1 -sha256
            -keyout {{ _tls_ca }} -out {{ _tls_ca }}
            -subj '/CN=Cache proxy'"
  args:
    creates: "{{ _tls_ca }}"
  register: _squid_ca_gen

- name: Get Squid CA certificate content
  ansible.builtin.command: "openssl x509 -in {{ _tls_ca }}"
  register: _squid_ca_cert
  changed_when: false

- name: CA certificate content
  ansible.builtin.debug:
    msg: "{{ _squid_ca_cert.stdout }}"

- name: Ensure Squid TLS database is reset on certificate change
  ansible.builtin.file:
    path: "{{ _tls_db }}"
    state: absent
  register: _squid_tls_db_clear
  when: _squid_ca_copy.changed or _squid_ca_gen.changed  # noqa no-handler

- name: Ensure Squid TLS database is initialized
  ansible.builtin.command: "/usr/lib64/squid/security_file_certgen -c -s {{ _tls_db }} -M 4MB"
  args:
    creates: "{{ _tls_db }}"

- name: Ensure Squid TLS database is configured
  ansible.builtin.file:
    path: "{{ _tls_db }}"
    state: directory
    owner: squid
    group: squid
    mode: "0750"
    setype: squid_cache_t
    recurse: true

- name: Ensure Squid service parent directory is present
  ansible.builtin.file:
    path: /etc/systemd/system/squid.service.d
    state: directory

- name: Ensure Squid systemd service configuration is present
  ansible.builtin.copy:
    src: squid_service.conf
    dest: /etc/systemd/system/squid.service.d/squid.conf

- name: Ensure Squid DNF redirector utility is present
  ansible.builtin.copy:
    src: squid_dnf_redirector.py
    dest: /usr/local/bin/squid_dnf_redirector
    owner: root
    group: squid
    mode: "0750"

- name: DNF mirrors configuration
  ansible.builtin.include_tasks: dnf_mirrors.yml

- name: SELinux configuration
  ansible.builtin.include_tasks: selinux.yml

- name: Firewall configuration
  ansible.builtin.include_tasks: firewall.yml

- name: Ensure security Squid package files metadata are in sync
  ansible.builtin.command: rpm --restore squid # noqa command-instead-of-module
  changed_when: false

- name: Ensure Squid service is started and enabled at boot
  ansible.builtin.systemd:
    name: squid
    state: "{{ (_squid_tls_db_clear.changed or _squid_conf.changed) | ternary('restarted', 'started') }}"
    enabled: true
    daemon_reload: true

- name: Ensure Squid "rpmnew" and "rpmsave" files are absent
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/squid/squid.conf.rpmnew
    - /etc/squid/squid.conf.rpmsave
